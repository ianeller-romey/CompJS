//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompJS_Repo.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompJSdbEntities : DbContext
    {
        public CompJSdbEntities()
            : base("name=CompJSdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<RetrieveAudioTypes_Result> RetrieveAudioTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAudioTypes_Result>("RetrieveAudioTypes");
        }
    
        public virtual ObjectResult<RetrieveCollisionTypes_Result> RetrieveCollisionTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveCollisionTypes_Result>("RetrieveCollisionTypes");
        }
    
        public virtual ObjectResult<RetrievePhysTypes_Result> RetrievePhysTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievePhysTypes_Result>("RetrievePhysTypes");
        }
    
        public virtual ObjectResult<RetrieveAllAudioForGame_Result> RetrieveAllAudioForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllAudioForGame_Result>("RetrieveAllAudioForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveBhvCompDefinition_Result> RetrieveBhvCompDefinition(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBhvCompDefinition_Result>("RetrieveBhvCompDefinition", idParameter);
        }
    
        public virtual ObjectResult<RetrieveBhvCompDefinition_Result> RetrieveBhvCompDefinitionForEntity(Nullable<int> entityTypeId)
        {
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBhvCompDefinition_Result>("RetrieveBhvCompDefinitionForEntity", entityTypeIdParameter);
        }
    
        public virtual ObjectResult<RetrieveBhvCompDefinition_Result> RetrieveAllBhvCompDefinitionsForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBhvCompDefinition_Result>("RetrieveAllBhvCompDefinitionsForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAllGames_Result> RetrieveAllGames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllGames_Result>("RetrieveAllGames");
        }
    
        public virtual ObjectResult<RetrieveGfxCompDefinition_Result> RetrieveGfxCompDefinition(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveGfxCompDefinition_Result>("RetrieveGfxCompDefinition", idParameter);
        }
    
        public virtual ObjectResult<RetrieveGfxCompDefinition_Result> RetrieveGfxCompDefinitionForEntity(Nullable<int> entityTypeId)
        {
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveGfxCompDefinition_Result>("RetrieveGfxCompDefinitionForEntity", entityTypeIdParameter);
        }
    
        public virtual ObjectResult<RetrieveGfxCompDefinition_Result> RetrieveAllGfxCompDefinitionsForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveGfxCompDefinition_Result>("RetrieveAllGfxCompDefinitionsForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAnimationStateDefinitionsForGfxCompDefinition_Result> RetrieveAnimationStateDefinitionsForGfxCompDefinition(Nullable<int> gfxCompDefinitionId)
        {
            var gfxCompDefinitionIdParameter = gfxCompDefinitionId.HasValue ?
                new ObjectParameter("gfxCompDefinitionId", gfxCompDefinitionId) :
                new ObjectParameter("gfxCompDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAnimationStateDefinitionsForGfxCompDefinition_Result>("RetrieveAnimationStateDefinitionsForGfxCompDefinition", gfxCompDefinitionIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAnimationFrameDefinitionsForAnimationStateDefinition_Result> RetrieveAnimationFrameDefinitionsForAnimationStateDefinition(Nullable<int> animationStateDefinitionId)
        {
            var animationStateDefinitionIdParameter = animationStateDefinitionId.HasValue ?
                new ObjectParameter("animationStateDefinitionId", animationStateDefinitionId) :
                new ObjectParameter("animationStateDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAnimationFrameDefinitionsForAnimationStateDefinition_Result>("RetrieveAnimationFrameDefinitionsForAnimationStateDefinition", animationStateDefinitionIdParameter);
        }
    
        public virtual ObjectResult<RetrievePhysCompDefinition_Result> RetrievePhysCompDefinition(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievePhysCompDefinition_Result>("RetrievePhysCompDefinition", idParameter);
        }
    
        public virtual ObjectResult<RetrievePhysCompDefinition_Result> RetrievePhysCompDefinitionForEntity(Nullable<int> entityTypeId)
        {
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievePhysCompDefinition_Result>("RetrievePhysCompDefinitionForEntity", entityTypeIdParameter);
        }
    
        public virtual ObjectResult<RetrievePhysCompDefinition_Result> RetrieveAllPhysCompDefinitionsForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievePhysCompDefinition_Result>("RetrieveAllPhysCompDefinitionsForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveEntity_Result> RetrieveEntity(Nullable<int> entityTypeId)
        {
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveEntity_Result>("RetrieveEntity", entityTypeIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAllEntityTypeDefinitionsForGame_Result> RetrieveAllEntityTypeDefinitionsForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllEntityTypeDefinitionsForGame_Result>("RetrieveAllEntityTypeDefinitionsForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAllShadersForGame_Result> RetrieveAllShadersForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllShadersForGame_Result>("RetrieveAllShadersForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAllLevelsForGame_Result> RetrieveAllLevelsForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllLevelsForGame_Result>("RetrieveAllLevelsForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveLevelLayoutsForLevel_Result> RetrieveLevelLayoutsForLevel(Nullable<int> levelId)
        {
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("levelId", levelId) :
                new ObjectParameter("levelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveLevelLayoutsForLevel_Result>("RetrieveLevelLayoutsForLevel", levelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CreateHighScoreForGame(string playerName, Nullable<long> score, Nullable<int> gameId)
        {
            var playerNameParameter = playerName != null ?
                new ObjectParameter("playerName", playerName) :
                new ObjectParameter("playerName", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(long));
    
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CreateHighScoreForGame", playerNameParameter, scoreParameter, gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveTopHighScoresForGame_Result> RetrieveTopHighScoresForGame(Nullable<int> count, Nullable<int> gameId)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveTopHighScoresForGame_Result>("RetrieveTopHighScoresForGame", countParameter, gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveAllHighScoresForGame_Result> RetrieveAllHighScoresForGame(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("gameId", gameId) :
                new ObjectParameter("gameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveAllHighScoresForGame_Result>("RetrieveAllHighScoresForGame", gameIdParameter);
        }
    
        public virtual ObjectResult<RetrieveFontTextureDefinitionsForGfxComp_Result> RetrieveFontTextureDefinitionsForGfxComp(Nullable<int> gfxCompDefinitionId)
        {
            var gfxCompDefinitionIdParameter = gfxCompDefinitionId.HasValue ?
                new ObjectParameter("gfxCompDefinitionId", gfxCompDefinitionId) :
                new ObjectParameter("gfxCompDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveFontTextureDefinitionsForGfxComp_Result>("RetrieveFontTextureDefinitionsForGfxComp", gfxCompDefinitionIdParameter);
        }
    }
}
